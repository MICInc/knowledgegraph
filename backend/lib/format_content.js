var mongoose = require('mongoose');
var utils = require('./utils');
var path = require('path');

module.exports = {
	extract: function(req) {
		var title = req.body.title;
		var data = req.body.data;
		var id = req.body.id;
		var user = req.body.user;
		var title = data.title;
		// only optimize and create hashtags if published
		// data.cell = data.publish ? module.exports.compress_html(data.cell) : data.cell;
		data.cell = data.cell != undefined ? module.exports.compress_html(data.cell) : {}

		/*
			authors - string combination of session info and coauthors
			description - eventually generated by text summarization model
		*/

		return {
			"_id": id.length > 0 ? id : mongoose.Types.ObjectId(),
			"authors": user.first_name+' '+user.last_name,
			"citations": data.citations.split(','),
			"content": data.cell,
			"date_created": data.date_created,
			"description": "",
			"first_name": user.first_name,
			"last_modified": data.last_modified,
			"last_name": user.last_name,
			"num_citations": 0,
			"num_comments": 0,
			"num_likes": 0,
			"num_saves": 0,
			"num_shares": 0,
			"prereqs": [],
			"published": data.publish,
			"save_by": [],
			"subseqs": [],
			"title": title,
			"url": module.exports.generate_url(title),
			"year": (new Date()).getFullYear()
		};
	},
	compress_html: function(cell) {
		return module.exports.extract_hashtags(cell);
	},
	escape(str) {
		return str.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1");
	},
	extract_hashtags: function(cell) {

		if(cell['html'] != undefined) {
			var hashtag = cell['html'].match(/(?:^|[ ])#([a-zA-Z]+)/gm);

			for(var i in hashtag) {
				var tag = module.exports.escape(hashtag[i].trim());
				var atag = '<a class=\"hashtag\" style=\"color:black;\" href=/search/'+tag+'>'+tag+'</a>';
				cell['html'] = cell['html'].replace((new RegExp(tag, 'g')), atag);
			}
		}
	
		return cell
	},
	generate_url: function(title) {
		return title.length > 0 ? title.toLowerCase().replace(/[^a-z0-9\s]/gi,'').replace(/\s/g, '-') : utils.uniqueID();
	}
}